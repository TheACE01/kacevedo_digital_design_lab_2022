module image_rom(
	input logic clk_50,

	output logic [7:0]  VGA_R,        //VGA Red
							  VGA_G,        //VGA Green
							  VGA_B,        //VGA Blue
	output logic        VGA_CLK,      //VGA Clock
							  VGA_SYNC_N,   //VGA Sync signal
							  VGA_BLANK_N,  //VGA Blank signal
							  VGA_VS,       //VGA virtical sync signal
							  VGA_HS        //VGA horizontal sync signal
);

	logic [9:0] x, y;
	logic video_on;
	logic enable_v_counter;
	
	horizontal_counter HC(.clk_25(VGA_CLK),
								 .rst(1'b1), 
								 .enable_v_counter(enable_v_counter), 
								 .h_counter(x));
								 
	vertical_counter HC(.clk_25(VGA_CLK),
							  .rst(1'b1), 
							  .enable_v_counter(enable_v_counter), 
							  .v_counter(y));


	// Create an instance for the clock divider
	vga_clk clk_divider(.inclk0(clk_50), .c0(VGA_CLK));
	

	// Create an instance for the VGA Controller
	vga_controller VGA(.clk(clk_50),
							 .rst(1'b1),
							 .h_counter(h_counter),
							 .v_counter(v_counter),
							 .VGA_HS(VGA_HS), 
							 .VGA_VS(VGA_VS),      
							 .VGA_CLK(VGA_CLK),     
							 .VGA_BLANK_N(VGA_BLANK_N), 
							 .VGA_SYNC_N(VGA_SYNC_N),
							 .video_on(video_on));
	
	

	assign VGA_R = 8'hDF;
	assign VGA_G = 8'h28;
	assign VGA_B = 8'h28;
	

	 

endmodule	
    